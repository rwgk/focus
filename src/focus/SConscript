Import("focus_scons_env", "env_etc")
import libtbx.load_env
import os

env = focus_scons_env.Clone()
env.Append(CPPPATH=["#focus/src/sginfo"])
env.Append(CCFLAGS=["-DFFTfftw"])
env.Prepend(LIBS=["fftw3f", "sginfo"])
base = libtbx.env.under_build("base")
if (os.path.isfile(os.path.join(base, "include", "fftw3.h"))):
  env.Append(CPPPATH=[os.path.join(base, "include")])
  env.Append(LIBPATH=[os.path.join(base, "lib")])
  if (    env_etc.compiler == "unix_gcc"
      and ARGUMENTS.get("focus", "") == "static"):
    env.Prepend(LINKFLAGS=["-static"])
exe = env.Program(
  target=["#exe/focus"],
  source=[
    "atominfo.c",
    "cputime.c",
    "evalfw.c",
    "findpnnb.c",
    "frame.c",
    "io.c",
    "lattice.c",
    "lib.c",
    "matrix.c",
    "posnmx.c",
    "psearch.c",
    "ranmar.c",
    "recycle.c",
    "scatfact.c",
    "setaos.c",
    "sgextend.c",
    "signal.c",
    "sitefcal.c",
    "tetrahed.c",
    "trialoop.c",
    "trpcmplx.c",
    "xtal.c",
    "main.c",
    "fourier.c",
    "nodsurf.c"])
libtbx.env.write_dispatcher_in_bin(
  source_file=exe[0].get_abspath(),
  target_file="focus")
